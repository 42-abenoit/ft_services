set_global_cluster_ip () {
if [[ $(uname) == "Linux" ]]
#then
#	MINI_IP=172.17.0.10
then
	MINI_IP=192.168.49.3
else
	MINI_IP=$(minikube ip)
fi
cp -f k8s_conf/metallb_config.yaml k8s_conf/config.yaml
sed -i "s/MINI_IP/$MINI_IP/g" k8s_conf/metallb.yaml
#alternate method :
#kubectl get node -o=custom-columns='DATA:status.addresses[0].address'
}

metallb_mini_enable () {
if [[ -z $(minikube addons list | grep metallb | grep enabled) ]]
then
	echo "Enabling Metallb"
	minikube addons enable metallb
	kubectl apply -f k8s_conf/metallb.yaml
#	echo "$MINI_IP\n$MINI_IP\n" | minikube addons configure metallb
fi
}

metallb_manual_enable () {
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml
kubectl get configmap kube-proxy -n kube-system -o yaml | \
sed -e "s/strictARP: false/strictARP: true/" | \
kubectl apply -f - -n kube-system
if [ "$(kubectl get secrets --namespace metallb-system | grep memberlist)" = "" ]
	then
	kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
fi
set_global_cluster_ip
kubectl apply -f k8s_conf/metallb.yaml
}
